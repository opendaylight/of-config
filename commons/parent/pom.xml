<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2015 ZTE, Inc. and others. All rights reserved. This 
	program and the accompanying materials are made available under the terms 
	of the Eclipse Public License v1.0 which accompanies this distribution, and 
	is available at http://www.eclipse.org/legal/epl-v10.html -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.opendaylight.odlparent</groupId>
		<artifactId>odlparent</artifactId>
		<version>1.6.0-SNAPSHOT</version>
		<relativePath />
	</parent>

	<groupId>org.opendaylight.ofconfig</groupId>
	<artifactId>commons</artifactId>
	<name>${project.artifactId}.parent</name>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<description>The of-config  integration project is a project for OpenDaylight that will implement the Of-configure protocol allowing the Southbound configuration of vSwitches and a network virtualization implementation.</description>
	<url>https://wiki.opendaylight.org/view/OFCONF_Integration:Main</url>
	<licenses>
		<license>
			<name>Eclipse Public License v1.0</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>rui hu</name>
			<email>hu.rui2@zte.com.cn</email>
		</developer>
		<developer>
			<name>hui xu</name>
			<email>xu.hui7@zte.com.cn</email>
		</developer>
		<developer>
			<name>rui zhang</name>
			<email>zhang.rui65@zte.com.cn</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:ssh://git.opendaylight.org:29418/of-config.git</connection>
		<developerConnection>scm:git:ssh://git.opendaylight.org:29418/of-config.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://wiki.opendaylight.org/view/OFCONF_Integration:Main</url>
	</scm>

	<distributionManagement>
		<!-- OpenDayLight Released artifact -->
		<repository>
			<id>opendaylight-release</id>
			<url>${nexusproxy}/repositories/opendaylight.release/</url>
		</repository>
		<!-- OpenDayLight Snapshot artifact -->
		<snapshotRepository>
			<id>opendaylight-snapshot</id>
			<url>${nexusproxy}/repositories/opendaylight.snapshot/</url>
		</snapshotRepository>
		<!-- Site deployment -->
		<site>
			<id>website</id>
			<url>${sitedeploy}</url>
		</site>
	</distributionManagement>

	<prerequisites>
		<maven>3.1.1</maven>
	</prerequisites>

	<properties>
		

	</properties>

	<dependencyManagement>
		
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version.source}</source>
						<target>${java.version.target}</target>
						<testSource>${java.version.source}</testSource>
						<testTarget>${java.version.target}</testTarget>
					</configuration>
				</plugin>
				<!-- This configuration should move to ODL-Parent -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle.mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>set-system-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
											<goal>pre-test</goal>
											<goal>post-test</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.opendaylight.yangtools</groupId>
										<artifactId>yang-maven-plugin</artifactId>
										<versionRange>[0.5,)</versionRange>
										<goals>
											<goal>generate-sources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<configuration>
						<configLocation>src/main/resources/ofconfig_checks.xml</configLocation>
						<failsOnError>true</failsOnError>
						<includes>**/*.java,**/*.xml,**/*.ini,**/*.sh,**/*.bat</includes>
						<excludes>**/yang/,**/features/</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<skip>${skip.coverage}</skip>
					</configuration>
					<executions>
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<destFile>${sonar.jacoco.reportPath}</destFile>
							</configuration>
						</execution>
						<execution>
							<id>pre-integration-test</id>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
							<configuration>
								<destFile>${sonar.jacoco.itReportPath}</destFile>
								<append>true</append>
								<skip>${skip.integrationtest}</skip>
							</configuration>
						</execution>
						<execution>
							<id>post-unit-test</id>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>${sonar.jacoco.reportPath}</dataFile>
							</configuration>
						</execution>
						<execution>
							<id>post-integration-test</id>
							<goals>
								<goal>report-integration</goal>
							</goals>
							<configuration>
								<dataFile>${sonar.jacoco.itReportPath}</dataFile>
								<skip>${skip.integrationtest}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<id>failsafe-integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
								<skipTests>${skip.integrationtest}</skipTests>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.opendaylight.yangtools</groupId>
					<artifactId>yang-maven-plugin</artifactId>
					<version>${yangtools.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate-sources</goal>
							</goals>
							<configuration>
								<!-- directory containing yang files to parse and generate code -->
								<yangFilesRootDir>src/main/yang</yangFilesRootDir>
								<inspectDependencies>true</inspectDependencies>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.opendaylight.yangtools</groupId>
							<artifactId>maven-sal-api-gen-plugin</artifactId>
							<version>${yangtools.version}</version>
							<type>jar</type>
						</dependency>
						<dependency>
							<groupId>org.opendaylight.controller</groupId>
							<artifactId>yang-jmx-generator-plugin</artifactId>
							<version>${yang-jmx-generator-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- tells eclipse to import these folders into the package explorer 
					as "source" folders which allows eclipse to resolve the classes correctly 
					during an eclipse build -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>add-source</id>
							<goals>
								<goal>add-source</goal>
							</goals>
							<phase>generate-sources</phase>
							<configuration>
								<sources>
									<source>src/main/yang</source>
									<source>${jmxGeneratorPath}</source>
									<source>${salGeneratorPath}</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>





		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>integrationtest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skip.integrationtest>false</skip.integrationtest>
			</properties>
		</profile>
		<profile>
			<id>coverage</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skip.coverage>false</skip.coverage>
			</properties>
		</profile>
		<profile>
			<id>jenkins</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skip.distribution>true</skip.distribution>
				<root.directory>${env.WORKSPACE}</root.directory>
			</properties>
		</profile>
		<profile>
			<id>karaf</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skip.karaf.featureTest>false</skip.karaf.featureTest>
			</properties>
		</profile>
	</profiles>
</project>
